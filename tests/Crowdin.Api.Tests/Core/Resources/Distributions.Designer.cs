//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Crowdin.Api.Tests.Core.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Distributions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Distributions() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Crowdin.Api.Tests.Core.Resources.Distributions", typeof(Distributions).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;exportMode&quot;: &quot;bundle&quot;,
        ///  &quot;name&quot;: &quot;distribution 1&quot;,
        ///  &quot;fileIds&quot;: [
        ///    0
        ///  ],
        ///  &quot;bundleIds&quot;: [
        ///    1,
        ///    2
        ///  ]
        ///}.
        /// </summary>
        internal static string AddDistribution_Request {
            get {
                return ResourceManager.GetString("AddDistribution_Request", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;data&quot;: {
        ///    &quot;hash&quot;: &quot;string&quot;,
        ///    &quot;exportMode&quot;: &quot;bundle&quot;,
        ///    &quot;name&quot;: &quot;distribution 1&quot;,
        ///    &quot;fileIds&quot;: [
        ///      0
        ///    ],
        ///    &quot;bundleIds&quot;: [
        ///      1,
        ///      2
        ///    ],
        ///    &quot;createdAt&quot;: &quot;2019-09-16T13:48:04+00:00&quot;,
        ///    &quot;updatedAt&quot;: &quot;2019-09-19T13:25:27+00:00&quot;
        ///  }
        ///}.
        /// </summary>
        internal static string AddDistribution_Response {
            get {
                return ResourceManager.GetString("AddDistribution_Response", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  {
        ///    &quot;path&quot;: &quot;/exportMode&quot;,
        ///    &quot;op&quot;: &quot;replace&quot;,
        ///    &quot;value&quot;: &quot;bundle&quot;
        ///  },
        ///  {
        ///    &quot;path&quot;: &quot;/name&quot;,
        ///    &quot;op&quot;: &quot;replace&quot;,
        ///    &quot;value&quot;: &quot;distribution 2&quot;
        ///  },
        ///  {
        ///    &quot;path&quot;: &quot;/fileIds&quot;,
        ///    &quot;op&quot;: &quot;replace&quot;,
        ///    &quot;value&quot;: [123]
        ///  },
        ///  {
        ///    &quot;path&quot;: &quot;/bundleIds&quot;,
        ///    &quot;op&quot;: &quot;replace&quot;,
        ///    &quot;value&quot;: [123, 456]
        ///  },
        ///].
        /// </summary>
        internal static string EditDistribution_Request_AllPaths {
            get {
                return ResourceManager.GetString("EditDistribution_Request_AllPaths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;data&quot;: {
        ///    &quot;hash&quot;: &quot;someHash&quot;,
        ///    &quot;name&quot;: &quot;some name&quot;,
        ///    &quot;fileIds&quot;: [
        ///      0
        ///    ],
        ///    &quot;bundleIds&quot;: [
        ///      123,
        ///      456  
        ///    ],
        ///    &quot;createdAt&quot;: &quot;2019-09-16T13:48:04+00:00&quot;,
        ///    &quot;updatedAt&quot;: &quot;2019-09-19T13:25:27+00:00&quot;
        ///  }
        ///}.
        /// </summary>
        internal static string EditDistribution_Response {
            get {
                return ResourceManager.GetString("EditDistribution_Response", resourceCulture);
            }
        }
    }
}
